const JsonURLS={Head:"Data/Head.json",Torso:"Data/Torso.json",Arms:"Data/Arms.json",Waist:"Data/Waist.json",Legs:"Data/Legs.json",Skills:"Data/Skills.json",Decos:"Data/Decorations.json"},Decoration_Level_IMG=["Assets/deco1.png","Assets/deco2.png","Assets/deco3.png"];let Jsons={},charmTable,ResultSkills={Weapon:{},Head:{},Torso:{},Arms:{},Waist:{},Legs:{},Charm:{},HeadDeco:{},TorsoDeco:{},ArmsDeco:{},WaistDeco:{},LegsDeco:{},CharmDeco:{},WeaponDeco:{}};async function fetchJson(name){return hasKey=name in Jsons,hasKey?Jsons[name]:fetch(JsonURLS[name]).then(response=>(Jsons[name]=response.json(),Jsons[name]))}async function getJson(name,isCharm){return null!=typeof isCharm&&1!=isCharm?fetchJson(name):getCharmJson()}function getCharmJson(){let charmJsonString=localStorage.getItem("charms","");return null==charmJsonString||""==charmJsonString||null==typeof charmJsonString?{}:JSON.parse(charmJsonString)}function setCharmJson(charmJson){localStorage.setItem("charms",JSON.stringify(charmJson))}function removeCharm(charmName){let charms=getCharmJson();delete charms[charmName],setCharmJson(charms)}function decorationSlotStringify(slots){return 0==Object.keys(slots).length?"0":1==Object.keys(slots).length?`${slots.Slot_1}`:2==Object.keys(slots).length?`${slots.Slot_1} - ${slots.Slot_2}`:3==Object.keys(slots).length?`${slots.Slot_1} - ${slots.Slot_2} - ${slots.Slot_3}`:void 0}function parseDecorationSlots(slots){let decoSlots={};return"0"==slots[0]?decoSlots:(decoSlots.Slot_1=parseInt(slots[0]),"0"==slots[1]?decoSlots:(decoSlots.Slot_2=parseInt(slots[1]),"0"==slots[2]?decoSlots:(decoSlots.Slot_3=parseInt(slots[2]),decoSlots)))}async function injectSkillToSkillsDisplayer(displayer,skill){const SkillJson=await getJson("Skills");let div=document.createElement("div");div.setAttribute("class","input-group input-group-sm mb-3 col-md-6 col-sm-12 w-auto mx-auto");let span=document.createElement("span");span.setAttribute("class",skill[1]>=SkillJson[skill[0]].Max_Level?"input-group-text text-success fw-bold":"input-group-text text-danger fw-bold"),span.textContent=skill[1];let input=document.createElement("input");input.setAttribute("class","form-control"),input.setAttribute("disabled",""),input.setAttribute("value",skill[0]),div.appendChild(span),div.appendChild(input),displayer.appendChild(div)}async function injectOptionToSelector(selector,value,item){let option=document.createElement("option");option.setAttribute("value",value),option.textContent=item,selector.appendChild(option)}async function injectDecoInputToDecoSelector(displayer,selectorId,decorationSlots,isCharm){const DecoJson=await getJson("Decos");Object.entries(decorationSlots).forEach(slot=>{const Slot_Name=slot[0],Slot_Level=slot[1];let mainDiv=document.createElement("div");mainDiv.setAttribute("class","mt-2 d-flex");let innerDiv_1=document.createElement("div");innerDiv_1.setAttribute("class","me-2");let innerDiv_2=document.createElement("div");innerDiv_2.setAttribute("class","flex-grow-1");let img=document.createElement("img");img.setAttribute("width","31px"),img.setAttribute("src",Decoration_Level_IMG[Slot_Level-1]);let select=document.createElement("select");select.setAttribute("style","width: 100%;"),select.setAttribute("class","form-select form-select-sm"),select.setAttribute("id",`${selectorId.replace("PieceSelector","")}DecoSelector_${Slot_Name}`),injectOptionToSelector(select,"None","None"),Object.entries(DecoJson).forEach(deco=>{const Deco_Name=deco[0],Deco_Level=deco[1].Level,Deco_Skill=deco[1].Skill;Slot_Level>=Deco_Level&&injectOptionToSelector(select,Deco_Name,Deco_Skill+` - ${Deco_Level}`)}),innerDiv_1.appendChild(img),innerDiv_2.appendChild(select),mainDiv.appendChild(innerDiv_1),mainDiv.appendChild(innerDiv_2),displayer.appendChild(mainDiv),$(`#${selectorId.replace("PieceSelector","")}DecoSelector_${Slot_Name}`).on("select2:select",()=>{onNewDecoSelected(selectorId.replace(selectorId.charAt(0),selectorId.charAt(0).toUpperCase()).replace("PieceSelector",""),isCharm)}),$(`#${selectorId.replace("PieceSelector","")}DecoSelector_${Slot_Name}`).select2()})}function injectCharmToCharmTable(charmName,charmSkills,decorationSlots){charmTable.row.add([charmName,charmSkills[0],charmSkills[1],charmSkills[2],decorationSlots]).draw()}async function showPieceSelectionItems(selectorId,pieceName,isCharm){let PieceSelector=document.getElementById(selectorId);PieceSelector.textContent="";const Json=await getJson(pieceName,isCharm);Object.entries(Json).forEach(item=>{injectOptionToSelector(PieceSelector,item[0],item[0])}),await onNewPieceSelected(selectorId,pieceName,isCharm)}async function onNewPieceSelected(selectorId,pieceName,isCharm){const PieceSelector=document.getElementById(selectorId),selectedItem=PieceSelector.value,Json=await getJson(pieceName,isCharm),pieceDetail=await Json[selectedItem];let PieceSkillsDisplayer=document.getElementById(selectorId.replace("PieceSelector","")+"SkillsDisplayer"),PieceDecorationsDisplayer=document.getElementById(selectorId.replace("PieceSelector","")+"DecorationsDisplayer");PieceSkillsDisplayer.innerHTML="",PieceDecorationsDisplayer.innerHTML="",ResultSkills[pieceName]={},ResultSkills[pieceName+"Deco"]={},""!=selectedItem?pieceDetail.Skills.length<=0||(Object.entries(pieceDetail.Skills).forEach(skill=>{const Skill_Name=skill[0],Skill_Level=parseInt(skill[1]);void 0===ResultSkills[pieceName][Skill_Name]?ResultSkills[pieceName][Skill_Name]=Skill_Level:ResultSkills[pieceName][Skill_Name]+=Skill_Level}),injectDecoInputToDecoSelector(PieceDecorationsDisplayer,selectorId,pieceDetail.Decoration_Slots,isCharm),await displaySelectedPieceDetails(pieceName,PieceSkillsDisplayer)):await displaySetResult()}async function onNewDecoSelected(pieceName,isCharm){const DecoJson=await getJson("Decos"),DecoSelectors=document.querySelectorAll(`[id^='${pieceName.toLowerCase()}DecoSelector_Slot']`);ResultSkills[pieceName+"Deco"]={},DecoSelectors.forEach(selector=>{const selectedJewel=selector.value;if("None"==selectedJewel||null==typeof selectedItem||null==typeof selectedItem)return;const selectedSkill=DecoJson[selectedJewel].Skill;void 0===ResultSkills[pieceName+"Deco"][selectedSkill]?ResultSkills[pieceName+"Deco"][selectedSkill]=1:ResultSkills[pieceName+"Deco"][selectedSkill]+=1});let PieceSkillsDisplayer=document.getElementById(pieceName.toLowerCase()+"SkillsDisplayer");PieceSkillsDisplayer.innerHTML="",await displaySelectedPieceDetails(pieceName,PieceSkillsDisplayer)}async function displaySelectedPieceDetails(pieceName,PieceSkillsDisplayer){const SkillFromPiece=ResultSkills[pieceName],SkillFromDeco=ResultSkills[pieceName+"Deco"];let totalSkill={};Object.entries(SkillFromPiece).forEach(skill=>{"null"!=skill[0]&&(void 0===totalSkill[skill[0]]?totalSkill[skill[0]]=skill[1]:totalSkill[skill[0]]+=skill[1])}),Object.entries(SkillFromDeco).forEach(skill=>{"null"!=skill[0]&&(void 0===totalSkill[skill[0]]?totalSkill[skill[0]]=skill[1]:totalSkill[skill[0]]+=skill[1])}),Object.entries(totalSkill).forEach(skill=>{injectSkillToSkillsDisplayer(PieceSkillsDisplayer,skill)}),await displaySetResult()}async function displaySetResult(){let setResultSkillDisplayer=document.getElementById("setresultSkillDisplayer");setResultSkillDisplayer.innerHTML="";let totalSkill={};Object.entries(ResultSkills).forEach(item=>{Object.entries(item[1]).forEach(skill=>{void 0===totalSkill[skill[0]]?totalSkill[skill[0]]=skill[1]:totalSkill[skill[0]]+=skill[1]})});const SkillJson=await getJson("Skills");Object.entries(SkillJson).forEach(skill=>{null!=totalSkill[skill[0]]&&injectSkillToSkillsDisplayer(setResultSkillDisplayer,[skill[0],totalSkill[skill[0]]])})}function displayCharmsToTable(){const charmJSON=getCharmJson();charmTable.clear().draw(),Object.entries(charmJSON).forEach(charm=>{const charmName=charm[0],charmDetails=Object.entries(charm[1]);let decorationSlots=charmDetails[0][1];decorationSlots=decorationSlotStringify(decorationSlots);const charmSkills=["","",""];for(i=0;i<Object.keys(charmDetails[1][1]).length;i++){const skillName=Object.keys(charmDetails[1][1])[i];charmSkills[i]=skillName+" - "+charmDetails[1][1][skillName]}injectCharmToCharmTable(charmName,charmSkills,decorationSlots)})}async function initCharmMaker(){const selectors=document.querySelectorAll("[id^='charmMakingSkillSelector']"),JsonSkill=await getJson("Skills");selectors.forEach(selector=>{injectOptionToSelector(selector,"None","None")}),Object.entries(JsonSkill).forEach(skill=>{injectOptionToSelector(selectors[0],skill[0],skill[0]),injectOptionToSelector(selectors[1],skill[0],skill[0]),injectOptionToSelector(selectors[2],skill[0],skill[0])}),$("[id^='charmMakingSkillSelector']").select2()}async function createCharm(name,skills,slots){let charms=getCharmJson();if(null!=charms[name])return alert("Charm's name must be unique");let slotsJson={};for(var i=0;i<slots.length;i++){let slot=slots.charAt(i);if("0"==slot)break;if("1"!=slot&&"2"!=slot&&"3"!=slot)break;slotsJson[`Slot_${i+1}`]=parseInt(slot)}const charmSkills=["","",""];for(i=0;i<Object.keys(skills).length;i++){const skillName=Object.keys(skills)[i];charmSkills[i]=skillName+" - "+skills[skillName]}charms[name]={},charms[name].Decoration_Slots=slotsJson,charms[name].Skills=skills,injectCharmToCharmTable(name,charmSkills,decorationSlotStringify(slotsJson)),setCharmJson(charms),await showPieceSelectionItems("charmPieceSelector","Charm",!0),alert(`${name} charm is created as successfully!`)}async function onNewWeaponSelected(){let weaponSlotSelector=document.getElementById("weaponSlotSelector"),weaponDecorationDisplayer=document.getElementById("weaponDecorationsDisplayer"),decorationSlots=parseDecorationSlots(weaponSlotSelector.value);weaponDecorationDisplayer.innerHTML="",injectDecoInputToDecoSelector(weaponDecorationDisplayer,"weaponPieceSelector",decorationSlots)}async function main(){await showPieceSelectionItems("headPieceSelector","Head"),await showPieceSelectionItems("torsoPieceSelector","Torso"),await showPieceSelectionItems("armsPieceSelector","Arms"),await showPieceSelectionItems("waistPieceSelector","Waist"),await showPieceSelectionItems("legsPieceSelector","Legs"),await showPieceSelectionItems("charmPieceSelector","Charm",!0),await initCharmMaker(),await displayCharmsToTable(),await onNewWeaponSelected(),$("[id$='Selector']").select2()}$(document).ready((function(){charmTable=$("#charmTable").DataTable({columnDefs:[{targets:-1,data:null,defaultContent:'<button type="button" class="btn btn-sm btn-danger"> <span> <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">\n        <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>\n        <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>\n      </svg> </span>Delete</button>'}]}),$("#charmTable tbody").on("click","button",(async function(){let data=charmTable.row($(this).parents("tr")[0]).data(),isMobile=!1,decision;null==data&&(data=charmTable.row($(this).parents("tr")[1]).data(),isMobile=!0),confirm("Are you sure you want to delete this charm?")&&(removeCharm(data[0]),await showPieceSelectionItems("charmPieceSelector","Charm",!0),isMobile?charmTable.row($(this).parents("tr")[1]).remove().draw():charmTable.row($(this).parents("tr")[0]).remove().draw())})),main()})),$("[id$='PieceSelector']").each((ind,selector)=>{const id=selector.getAttribute("id");$(`#${id}`).on("select2:select",()=>{const pieceName=id.replace(id.charAt(0),id.charAt(0).toUpperCase()).replace("PieceSelector","");"Charm"==pieceName?onNewPieceSelected(id,pieceName,!0):onNewPieceSelected(id,pieceName)})}),$("#weaponSlotSelector").on("select2:select",()=>{onNewWeaponSelected()}),document.getElementById("createCharmBtn").addEventListener("click",async e=>{let charmName=document.getElementById("charmMakingName").value;if(""==charmName)return alert("Charm name can't be empty");if(charmName.length>16)return alert("Charm name must be less then 16 characters");let skillSelector1=document.getElementById("charmMakingSkillSelector1"),levelSelector1=document.getElementById("charmMakingLevelSelector1"),skillSelector2=document.getElementById("charmMakingSkillSelector2"),levelSelector2=document.getElementById("charmMakingLevelSelector2"),skillSelector3=document.getElementById("charmMakingSkillSelector3"),levelSelector3=document.getElementById("charmMakingLevelSelector3"),slotSelector=document.getElementById("charmMakingSlotSelector");skills={},"None"!=skillSelector1.value&&"0"!=levelSelector1.value&&(skills[skillSelector1.value]=parseInt(levelSelector1.value)),"None"!=skillSelector2.value&&"0"!=levelSelector2.value&&skillSelector2.value!=skillSelector1.value&&(skills[skillSelector2.value]=parseInt(levelSelector2.value)),"None"!=skillSelector3.value&&"0"!=levelSelector3.value&&skillSelector3.value!=skillSelector1.value&&skillSelector3.value!=skillSelector2.value&&(skills[skillSelector3.value]=parseInt(levelSelector3.value)),await createCharm(charmName,skills,slotSelector.value)});